"use strict";
var Control_Bind = require("../Control.Bind/index.js");
var Control_Monad_Free = require("../Control.Monad.Free/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Show = require("../Data.Show/index.js");
var Effect = require("../Effect/index.js");
var Pangram = require("../Pangram/index.js");
var Prelude = require("../Prelude/index.js");
var Test_Unit = require("../Test.Unit/index.js");
var Test_Unit_Assert = require("../Test.Unit.Assert/index.js");
var Test_Unit_Main = require("../Test.Unit.Main/index.js");
var suites = Test_Unit.suite("Pangram.isPangram")(Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Test_Unit.test("sentence empty")(Test_Unit_Assert.equal(Data_Eq.eqBoolean)(Data_Show.showBoolean)(false)(Pangram.isPangram(""))))(function () {
    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Test_Unit.test("pangram with only lower case")(Test_Unit_Assert.equal(Data_Eq.eqBoolean)(Data_Show.showBoolean)(true)(Pangram.isPangram("the quick brown fox jumps over the lazy dog"))))(function () {
        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Test_Unit.test("missing character 'x'")(Test_Unit_Assert.equal(Data_Eq.eqBoolean)(Data_Show.showBoolean)(false)(Pangram.isPangram("a quick movement of the enemy will jeopardize five gunboats"))))(function () {
            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Test_Unit.test("another missing character 'x'")(Test_Unit_Assert.equal(Data_Eq.eqBoolean)(Data_Show.showBoolean)(false)(Pangram.isPangram("the quick brown fish jumps over the lazy dog"))))(function () {
                return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Test_Unit.test("pangram with underscores")(Test_Unit_Assert.equal(Data_Eq.eqBoolean)(Data_Show.showBoolean)(true)(Pangram.isPangram("the_quick_brown_fox_jumps_over_the_lazy_dog"))))(function () {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Test_Unit.test("pangram with numbers")(Test_Unit_Assert.equal(Data_Eq.eqBoolean)(Data_Show.showBoolean)(true)(Pangram.isPangram("the 1 quick brown fox jumps over the 2 lazy dogs"))))(function () {
                        return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Test_Unit.test("missing letters replaced by numbers")(Test_Unit_Assert.equal(Data_Eq.eqBoolean)(Data_Show.showBoolean)(false)(Pangram.isPangram("7h3 qu1ck brown fox jumps ov3r 7h3 lazy dog"))))(function () {
                            return Control_Bind.discard(Control_Bind.discardUnit)(Control_Monad_Free.freeBind)(Test_Unit.test("pangram with mixed case and punctuation")(Test_Unit_Assert.equal(Data_Eq.eqBoolean)(Data_Show.showBoolean)(true)(Pangram.isPangram("\"Five quacking Zephyrs jolt my wax bed.\""))))(function () {
                                return Test_Unit.test("pangram with non ascii characters")(Test_Unit_Assert.equal(Data_Eq.eqBoolean)(Data_Show.showBoolean)(true)(Pangram.isPangram("Victor jagt zw\xf6lf Boxk\xe4mpfer quer \xfcber den gro\xdfen Sylter Deich.")));
                            });
                        });
                    });
                });
            });
        });
    });
}));
var main = Test_Unit_Main.runTest(suites);
module.exports = {
    main: main,
    suites: suites
};
