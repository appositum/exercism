"use strict";
var Prelude = require("../Prelude/index.js");

// | A class for random generator implementations.
// |
// | Instances should provide implementations for the generation functions
// | that return choices with uniform probability.
var MonadGen = function (Monad0, chooseBool, chooseFloat, chooseInt, resize, sized) {
    this.Monad0 = Monad0;
    this.chooseBool = chooseBool;
    this.chooseFloat = chooseFloat;
    this.chooseInt = chooseInt;
    this.resize = resize;
    this.sized = sized;
};

// | Runs a generator, passing in the current size state.
var sized = function (dict) {
    return dict.sized;
};

// | Modifies the size state for a random generator.
var resize = function (dict) {
    return dict.resize;
};

// | Chooses an integer in the specified (inclusive) range.
var chooseInt = function (dict) {
    return dict.chooseInt;
};

// | Chooses an floating point number in the specified (inclusive) range.
var chooseFloat = function (dict) {
    return dict.chooseFloat;
};

// | Chooses a random boolean value.
var chooseBool = function (dict) {
    return dict.chooseBool;
};
module.exports = {
    chooseBool: chooseBool,
    chooseFloat: chooseFloat,
    chooseInt: chooseInt,
    resize: resize,
    sized: sized,
    MonadGen: MonadGen
};
