"use strict";
var Control_Category = require("../Control.Category/index.js");
var Control_Monad = require("../Control.Monad/index.js");
var Effect = require("../Effect/index.js");

// | The `MonadEffect` class captures those monads which support native effects.
// |
// | Instances are provided for `Effect` itself, and the standard monad
// | transformers.
// |
// | `liftEffect` can be used in any appropriate monad transformer stack to lift an
// | action of type `Effect a` into the monad.
// |
var MonadEffect = function (Monad0, liftEffect) {
    this.Monad0 = Monad0;
    this.liftEffect = liftEffect;
};
var monadEffectEffect = new MonadEffect(function () {
    return Effect.monadEffect;
}, Control_Category.identity(Control_Category.categoryFn));
var liftEffect = function (dict) {
    return dict.liftEffect;
};
module.exports = {
    liftEffect: liftEffect,
    MonadEffect: MonadEffect,
    monadEffectEffect: monadEffectEffect
};
