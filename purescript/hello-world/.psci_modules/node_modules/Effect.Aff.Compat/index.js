
// | This module provides compatability functions for constructing `Aff`s which
// | are defined via the FFI.
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Control_Bind = require("../Control.Bind/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Either = require("../Data.Either/index.js");
var Data_Function = require("../Data.Function/index.js");
var Effect = require("../Effect/index.js");
var Effect_Aff = require("../Effect.Aff/index.js");
var Effect_Exception = require("../Effect.Exception/index.js");
var Effect_Uncurried = require("../Effect.Uncurried/index.js");
var Prelude = require("../Prelude/index.js");
var EffectFnCanceler = function (x) {
    return x;
};
var EffectFnAff = function (x) {
    return x;
};

// | Lift a FFI definition into an `Aff`. `EffectFnAff` makes use of `EffectFn` so
// | `Effect` thunks are unnecessary. A definition might follow this example:
// |
// | ```javascript
// | exports._myAff = function (onError, onSuccess) {
// |   var cancel = doSomethingAsync(function (err, res) {
// |     if (err) {
// |       onError(err);
// |     } else {
// |       onSuccess(res);
// |     }
// |   });
// |   return function (cancelError, onCancelerError, onCancelerSuccess) {
// |     cancel();
// |     onCancelerSuccess();
// |   };
// | };
// | ```
// |
// | ```purescript
// | foreign import _myAff :: EffectFnAff String
// |
// | myAff :: Aff String
// | myAff = fromEffectFnAff _myAff
// | ````
var fromEffectFnAff = function (v) {
    return Effect_Aff.makeAff(function (k) {
        return function __do() {
            var v1 = v(function ($4) {
                return k(Data_Either.Left.create($4))();
            }, function ($5) {
                return k(Data_Either.Right.create($5))();
            });
            return function (e) {
                return Effect_Aff.makeAff(function (k2) {
                    return function __do() {
                        v1(e, function ($6) {
                            return k2(Data_Either.Left.create($6))();
                        }, function ($7) {
                            return k2(Data_Either.Right.create($7))();
                        });
                        return Effect_Aff.nonCanceler;
                    };
                });
            };
        };
    });
};
module.exports = {
    EffectFnAff: EffectFnAff,
    EffectFnCanceler: EffectFnCanceler,
    fromEffectFnAff: fromEffectFnAff
};
