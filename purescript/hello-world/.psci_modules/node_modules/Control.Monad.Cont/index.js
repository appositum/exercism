
// | This module defines the `Cont`inuation monad.
"use strict";
var Control_Monad_Cont_Class = require("../Control.Monad.Cont.Class/index.js");
var Control_Monad_Cont_Trans = require("../Control.Monad.Cont.Trans/index.js");
var Control_Semigroupoid = require("../Control.Semigroupoid/index.js");
var Data_Identity = require("../Data.Identity/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Prelude = require("../Prelude/index.js");

// | Transform the continuation passed into the continuation-passing function.
var withCont = function (f) {
    return Control_Monad_Cont_Trans.withContT(function ($0) {
        return function ($1) {
            return Data_Identity.Identity(f(function ($2) {
                return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($0($2));
            })($1));
        };
    });
};

// | Runs a computation in the `Cont` monad.
var runCont = function (cc) {
    return function (k) {
        return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Cont_Trans.runContT(cc)(function ($3) {
            return Data_Identity.Identity(k($3));
        }));
    };
};

// | Transform the result of a continuation-passing function.
var mapCont = function (f) {
    return Control_Monad_Cont_Trans.mapContT(function ($4) {
        return Data_Identity.Identity(f(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($4)));
    });
};

// | Creates a computation in the `Cont` monad.
var cont = function (f) {
    return function (c) {
        return f(function ($5) {
            return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(c($5));
        });
    };
};
module.exports = {
    cont: cont,
    runCont: runCont
};
