"use strict";
var Control_Extend = require("../Control.Extend/index.js");
var Data_Functor = require("../Data.Functor/index.js");

// | `Comonad` extends the `Extend` class with the `extract` function
// | which extracts a value, discarding the comonadic context.
// |
// | `Comonad` is the dual of `Monad`, and `extract` is the dual of `pure`.
// |
// | Laws:
// |
// | - Left Identity: `extract <<= xs = xs`
// | - Right Identity: `extract (f <<= xs) = f xs`
var Comonad = function (Extend0, extract) {
    this.Extend0 = Extend0;
    this.extract = extract;
};
var extract = function (dict) {
    return dict.extract;
};
module.exports = {
    Comonad: Comonad,
    extract: extract
};
